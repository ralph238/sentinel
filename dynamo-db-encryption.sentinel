# This policy uses the Sentinel tfplan/v2 import to require that

# Import the tfplan/v2 import, but use the alias "tfplan"
import "tfplan/v2" as tfplan

# Import common-functions/tfplan-functions.sentinel with alias "plan"
import "tfplan-functions" as plan

validate_private_acl_and_kms_encryption = func() {
    result = {
        "enabled":          true  ,
    }
    s3_buckets = plan.find_resources("aws_dynamodb_table")
    # Iterate over resource instances and check that S3 buckets
    # have private ACL and are encrypted by a KMS key
    # If an S3 bucket is not encrypted, set result["server_side_encryption"] to false
    for s3_buckets as joined_path, resource_map {
        #...
    }
    return result
}

# Call the validation function
validations = validate_private_acl_and_kms_encryption()

# KMS Encryption Rule
is_server_side_encryption = rule {
    validations["enabled"]
}

# Main rule
main = rule {
  length(is_server_side_encryption["messages"]) is 0
}
